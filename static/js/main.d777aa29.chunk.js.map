{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","setSelectedTodo","className","map","todo","id","title","completed","classNames","type","onClick","TodoFilter","query","todosStatus","setTodosStatus","setQuery","value","onChange","event","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getUser","userId","Loader","TodoModal","useState","user","setUser","useEffect","fetchTodos","a","response","href","email","name","App","visibleTodos","setVisibleTodos","filteredTodos","filter","lowerCaseTitle","toLowerCase","lowerCaseQuery","includes","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d777aa29.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  setSelectedTodo: (todo: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo) => {\n          const {\n            id,\n            title,\n            completed,\n          } = todo;\n\n          return (\n            <tr\n              key={id}\n              data-cy=\"todo\"\n              className={classNames({\n                'has-background-info-light': selectedTodo === todo,\n              })}\n            >\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={classNames({\n                    'has-text-danger': !completed,\n                    'has-text-success': completed,\n                  })}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => setSelectedTodo(todo)}\n                >\n                  <span className=\"icon\">\n                    <i className={classNames(\n                      'far',\n                      {\n                        'fa-eye': selectedTodo !== todo,\n                        'fa-eye-slash': selectedTodo === todo,\n                      },\n                    )}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  query: string;\n  todosStatus: string;\n  setTodosStatus: (arg0: string) => void;\n  setQuery: (arg0: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  todosStatus,\n  setTodosStatus,\n  setQuery,\n}) => {\n  const handleSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    setTodosStatus(value);\n  };\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setQuery(value);\n  };\n\n  const handleClick = () => setQuery('');\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={todosStatus}\n            onChange={handleSelect}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleInput}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleClick}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  selectedTodo: Todo;\n  setSelectedTodo: (arg0: null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = selectedTodo;\n\n  const [user, setUser] = useState<User>();\n\n  const handleClick = () => setSelectedTodo(null);\n\n  useEffect(() => {\n    const fetchTodos = async () => {\n      const response = await getUser(userId);\n\n      setUser(response);\n    };\n\n    fetchTodos();\n  }, [id]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleClick}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong className={classNames(\n                {\n                  'has-text-success': completed,\n                  'has-text-danger': !completed,\n                },\n              )}\n              >\n                {completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { Todo } from './types/Todo';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [todosStatus, setTodosStatus] = useState('all');\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    const fetchTodos = async () => {\n      const response = await getTodos();\n\n      setVisibleTodos(response);\n    };\n\n    fetchTodos();\n  }, []);\n\n  const filteredTodos = visibleTodos.filter(({ completed, title }) => {\n    const lowerCaseTitle = title.toLowerCase();\n    const lowerCaseQuery = query.toLowerCase();\n\n    switch (todosStatus) {\n      case 'active':\n        return !completed && lowerCaseTitle.includes(lowerCaseQuery);\n      case 'completed':\n        return completed && lowerCaseTitle.includes(lowerCaseQuery);\n      default:\n        return lowerCaseTitle.includes(lowerCaseQuery);\n    }\n  });\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                todosStatus={todosStatus}\n                query={query}\n                setTodosStatus={setTodosStatus}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {visibleTodos.length > 0\n                ? (\n                  <TodoList\n                    todos={filteredTodos}\n                    setSelectedTodo={setSelectedTodo}\n                    selectedTodo={selectedTodo}\n                  />\n                ) : (\n                  <Loader />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          setSelectedTodo={setSelectedTodo}\n          selectedTodo={selectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}